{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///bundle.js","webpack:///webpack/bootstrap f6d367463769a0b932b2","webpack:///./index.js","webpack:///../~/jjv/index.js","webpack:///../~/jjv/lib/jjv.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","KotoConfig","schema","jjv","target","validator","proxyConfig","prototype","config","name","value","_validator$validate","errors","validate","Error","__esModule","__WEBPACK_AMD_DEFINE_RESULT__","Environment","coerceType","fieldType","clone","fieldValidate","fieldFormat","defaultOptions","obj","copy","Date","setTime","getTime","RegExp","Array","i","len","length","Object","attr","hasOwnProperty","clone_stack","stack","new_stack","key","object","push","copy_stack","old_stack","stack_last","handled","type","not","anyOf","allOf","oneOf","$ref","$schema","exclusiveMaximum","exclusiveMininum","properties","patternProperties","additionalProperties","items","additionalItems","required","default","title","description","definitions","dependencies","null","x","string","boolean","number","integer","isArray","array","date","alpha","v","test","alphanumeric","identifier","hexadecimal","numeric","date-time","isNaN","parse","indexOf","uppercase","toUpperCase","lowercase","toLowerCase","hostname","uri","email","ipv4","parts","split","sort","ipv6","readOnly","minimum","exclusiveMinimum","maximum","multipleOf","pattern","modifiers","regex","minLength","maxLength","minItems","maxItems","uniqueItems","hash","JSON","stringify","minProperties","count","maxProperties","constant","enum","vs","normalizeID","resolveURI","env","schema_stack","curschema","components","hash_idx","substr","charAt","shift","resolveObjectRef","object_stack","skip_frames","frame","last_frame","exec","parseInt","replace","checkValidity","options","hasProp","hasPattern","objerr","props","matched","errCount","minErrCount","malformed","objerrs","sl","ol","prop","useCoerce","concat","useDefault","removeAdditional","Infinity","keys","checkRequired","match","splice","additional","$data","__root__","validation","resolveRef","addType","func","addTypeCoercion","addCheck","addFormat","addSchema","undefined"],"mappings":"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","file":"bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"KotoConfig\"] = factory();\n\telse\n\t\troot[\"KotoConfig\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"KotoConfig\"] = factory();\n\telse\n\t\troot[\"KotoConfig\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\tfunction KotoConfig(schema) {\n\t  var jjv = __webpack_require__(1);\n\t  // TODO: add new types  here\n\t\n\t  return function Decorator(target) {\n\t    var validator = jjv();\n\t    var proxyConfig = target.prototype.config;\n\t    target.prototype.config = function proxy(name, value) {\n\t      var _validator$validate;\n\t\n\t      var errors = validator.validate(schema, (_validator$validate = {}, _validator$validate[name] = value, _validator$validate));\n\t      if (!errors) {\n\t        return proxyConfig.call(this, name, value);\n\t      }\n\t      // TODO: handle errors\n\t      throw Error('invald config');\n\t    };\n\t  };\n\t}\n\t\n\tif (false) {\n\t  require('./index.spec.js')(KotoConfig);\n\t}\n\t\n\texports.default = KotoConfig;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(2);\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* jshint proto: true */\n\t\n\t/**\n\t * jjv.js -- A javascript library to validate json input through a json-schema.\n\t *\n\t * Copyright (c) 2013 Alex Cornejo.\n\t *\n\t * Redistributable under a MIT-style open source license.\n\t */\n\t\n\t(function () {\n\t  var clone = function (obj) {\n\t      // Handle the 3 simple types (string, number, function), and null or undefined\n\t      if (obj === null || typeof obj !== 'object') return obj;\n\t      var copy;\n\t\n\t      // Handle Date\n\t      if (obj instanceof Date) {\n\t          copy = new Date();\n\t          copy.setTime(obj.getTime());\n\t          return copy;\n\t      }\n\t\n\t      // handle RegExp\n\t      if (obj instanceof RegExp) {\n\t        copy = new RegExp(obj);\n\t        return copy;\n\t      }\n\t\n\t      // Handle Array\n\t      if (obj instanceof Array) {\n\t          copy = [];\n\t          for (var i = 0, len = obj.length; i < len; i++)\n\t              copy[i] = clone(obj[i]);\n\t          return copy;\n\t      }\n\t\n\t      // Handle Object\n\t      if (obj instanceof Object) {\n\t          copy = {};\n\t//           copy = Object.create(Object.getPrototypeOf(obj));\n\t          for (var attr in obj) {\n\t              if (obj.hasOwnProperty(attr))\n\t                copy[attr] = clone(obj[attr]);\n\t          }\n\t          return copy;\n\t      }\n\t\n\t      throw new Error(\"Unable to clone object!\");\n\t  };\n\t\n\t  var clone_stack = function (stack) {\n\t    var new_stack = [ clone(stack[0]) ], key = new_stack[0].key, obj = new_stack[0].object;\n\t    for (var i = 1, len = stack.length; i< len; i++) {\n\t      obj = obj[key];\n\t      key = stack[i].key;\n\t      new_stack.push({ object: obj, key: key });\n\t    }\n\t    return new_stack;\n\t  };\n\t\n\t  var copy_stack = function (new_stack, old_stack) {\n\t    var stack_last = new_stack.length-1, key = new_stack[stack_last].key;\n\t    old_stack[stack_last].object[key] = new_stack[stack_last].object[key];\n\t  };\n\t\n\t  var handled = {\n\t    'type': true,\n\t    'not': true,\n\t    'anyOf': true,\n\t    'allOf': true,\n\t    'oneOf': true,\n\t    '$ref': true,\n\t    '$schema': true,\n\t    'id': true,\n\t    'exclusiveMaximum': true,\n\t    'exclusiveMininum': true,\n\t    'properties': true,\n\t    'patternProperties': true,\n\t    'additionalProperties': true,\n\t    'items': true,\n\t    'additionalItems': true,\n\t    'required': true,\n\t    'default': true,\n\t    'title': true,\n\t    'description': true,\n\t    'definitions': true,\n\t    'dependencies': true\n\t  };\n\t\n\t  var fieldType = {\n\t    'null': function (x) {\n\t      return x === null;\n\t    },\n\t    'string': function (x) {\n\t      return typeof x === 'string';\n\t    },\n\t    'boolean': function (x) {\n\t      return typeof x === 'boolean';\n\t    },\n\t    'number': function (x) {\n\t      // Use x === x instead of !isNaN(x) for speed\n\t      return typeof x === 'number' && x === x;\n\t    },\n\t    'integer': function (x) {\n\t      return typeof x === 'number' && x%1 === 0;\n\t    },\n\t    'object': function (x) {\n\t      return x && typeof x === 'object' && !Array.isArray(x);\n\t    },\n\t    'array': function (x) {\n\t      return Array.isArray(x);\n\t    },\n\t    'date': function (x) {\n\t      return x instanceof Date;\n\t    }\n\t  };\n\t\n\t  // missing: uri, date-time, ipv4, ipv6\n\t  var fieldFormat = {\n\t    'alpha': function (v) {\n\t      return (/^[a-zA-Z]+$/).test(v);\n\t    },\n\t    'alphanumeric': function (v) {\n\t      return (/^[a-zA-Z0-9]+$/).test(v);\n\t    },\n\t    'identifier': function (v) {\n\t      return (/^[-_a-zA-Z0-9]+$/).test(v);\n\t    },\n\t    'hexadecimal': function (v) {\n\t      return (/^[a-fA-F0-9]+$/).test(v);\n\t    },\n\t    'numeric': function (v) {\n\t      return (/^[0-9]+$/).test(v);\n\t    },\n\t    'date-time': function (v) {\n\t      return !isNaN(Date.parse(v)) && v.indexOf('/') === -1;\n\t    },\n\t    'uppercase': function (v) {\n\t      return v === v.toUpperCase();\n\t    },\n\t    'lowercase': function (v) {\n\t      return v === v.toLowerCase();\n\t    },\n\t    'hostname': function (v) {\n\t      return v.length < 256 && (/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])(\\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9]))*$/).test(v);\n\t    },\n\t    'uri': function (v) {\n\t      return (/[-a-zA-Z0-9@:%_\\+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_\\+.~#?&//=]*)?/).test(v);\n\t    },\n\t    'email': function (v) { // email, ipv4 and ipv6 adapted from node-validator\n\t      return (/^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/).test(v);\n\t    },\n\t    'ipv4': function (v) {\n\t      if ((/^(\\d?\\d?\\d)\\.(\\d?\\d?\\d)\\.(\\d?\\d?\\d)\\.(\\d?\\d?\\d)$/).test(v)) {\n\t        var parts = v.split('.').sort();\n\t        if (parts[3] <= 255)\n\t          return true;\n\t      }\n\t      return false;\n\t    },\n\t    'ipv6': function(v) {\n\t      return (/^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/).test(v);\n\t     /*  return (/^::|^::1|^([a-fA-F0-9]{1,4}::?){1,7}([a-fA-F0-9]{1,4})$/).test(v); */\n\t    }\n\t  };\n\t\n\t  var fieldValidate = {\n\t    'readOnly': function (v, p) {\n\t      return false;\n\t    },\n\t    // ****** numeric validation ********\n\t    'minimum': function (v, p, schema) {\n\t      return !(v < p || schema.exclusiveMinimum && v <= p);\n\t    },\n\t    'maximum': function (v, p, schema) {\n\t      return !(v > p || schema.exclusiveMaximum && v >= p);\n\t    },\n\t    'multipleOf': function (v, p) {\n\t      return (v/p)%1 === 0 || typeof v !== 'number';\n\t    },\n\t    // ****** string validation ******\n\t    'pattern': function (v, p) {\n\t      if (typeof v !== 'string')\n\t        return true;\n\t      var pattern, modifiers;\n\t      if (typeof p === 'string')\n\t        pattern=p;\n\t      else {\n\t        pattern=p[0];\n\t        modifiers=p[1];\n\t      }\n\t      var regex = new RegExp(pattern, modifiers);\n\t      return regex.test(v);\n\t    },\n\t    'minLength': function (v, p) {\n\t      return v.length >= p || typeof v !== 'string';\n\t    },\n\t    'maxLength': function (v, p) {\n\t      return v.length <= p || typeof v !== 'string';\n\t    },\n\t    // ***** array validation *****\n\t    'minItems': function (v, p) {\n\t      return v.length >= p || !Array.isArray(v);\n\t    },\n\t    'maxItems': function (v, p) {\n\t      return v.length <= p || !Array.isArray(v);\n\t    },\n\t    'uniqueItems': function (v, p) {\n\t      var hash = {}, key;\n\t      for (var i = 0, len = v.length; i < len; i++) {\n\t        key = JSON.stringify(v[i]);\n\t        if (hash.hasOwnProperty(key))\n\t          return false;\n\t        else\n\t          hash[key] = true;\n\t      }\n\t      return true;\n\t    },\n\t    // ***** object validation ****\n\t    'minProperties': function (v, p) {\n\t      if (typeof v !== 'object')\n\t        return true;\n\t      var count = 0;\n\t      for (var attr in v) if (v.hasOwnProperty(attr)) count = count + 1;\n\t      return count >= p;\n\t    },\n\t    'maxProperties': function (v, p) {\n\t      if (typeof v !== 'object')\n\t        return true;\n\t      var count = 0;\n\t      for (var attr in v) if (v.hasOwnProperty(attr)) count = count + 1;\n\t      return count <= p;\n\t    },\n\t    // ****** all *****\n\t    'constant': function (v, p) {\n\t      return JSON.stringify(v) == JSON.stringify(p);\n\t    },\n\t    'enum': function (v, p) {\n\t      var i, len, vs;\n\t      if (typeof v === 'object') {\n\t        vs = JSON.stringify(v);\n\t        for (i = 0, len = p.length; i < len; i++)\n\t          if (vs === JSON.stringify(p[i]))\n\t            return true;\n\t      } else {\n\t        for (i = 0, len = p.length; i < len; i++)\n\t          if (v === p[i])\n\t            return true;\n\t      }\n\t      return false;\n\t    }\n\t  };\n\t\n\t  var normalizeID = function (id) {\n\t    return id.indexOf(\"://\") === -1 ? id : id.split(\"#\")[0];\n\t  };\n\t\n\t  var resolveURI = function (env, schema_stack, uri) {\n\t    var curschema, components, hash_idx, name;\n\t\n\t    hash_idx = uri.indexOf('#');\n\t\n\t    if (hash_idx === -1) {\n\t      if (!env.schema.hasOwnProperty(uri))\n\t        return null;\n\t      return [env.schema[uri]];\n\t    }\n\t\n\t    if (hash_idx > 0) {\n\t      name = uri.substr(0, hash_idx);\n\t      uri = uri.substr(hash_idx+1);\n\t      if (!env.schema.hasOwnProperty(name)) {\n\t        if (schema_stack && schema_stack[0].id === name)\n\t          schema_stack = [schema_stack[0]];\n\t        else\n\t          return null;\n\t      } else\n\t        schema_stack = [env.schema[name]];\n\t    } else {\n\t      if (!schema_stack)\n\t        return null;\n\t      uri = uri.substr(1);\n\t    }\n\t\n\t    if (uri === '')\n\t      return [schema_stack[0]];\n\t\n\t    if (uri.charAt(0) === '/') {\n\t      uri = uri.substr(1);\n\t      curschema = schema_stack[0];\n\t      components = uri.split('/');\n\t      while (components.length > 0) {\n\t        if (!curschema.hasOwnProperty(components[0]))\n\t          return null;\n\t        curschema = curschema[components[0]];\n\t        schema_stack.push(curschema);\n\t        components.shift();\n\t      }\n\t      return schema_stack;\n\t    } else // FIX: should look for subschemas whose id matches uri\n\t      return null;\n\t  };\n\t\n\t  var resolveObjectRef = function (object_stack, uri) {\n\t    var components, object, last_frame = object_stack.length-1, skip_frames, frame, m = /^(\\d+)/.exec(uri);\n\t\n\t    if (m) {\n\t      uri = uri.substr(m[0].length);\n\t      skip_frames = parseInt(m[1], 10);\n\t      if (skip_frames < 0 || skip_frames > last_frame)\n\t        return;\n\t      frame = object_stack[last_frame-skip_frames];\n\t      if (uri === '#')\n\t        return frame.key;\n\t    } else\n\t      frame = object_stack[0];\n\t\n\t    object = frame.object[frame.key];\n\t\n\t    if (uri === '')\n\t      return object;\n\t\n\t    if (uri.charAt(0) === '/') {\n\t      uri = uri.substr(1);\n\t      components = uri.split('/');\n\t      while (components.length > 0) {\n\t        components[0] = components[0].replace(/~1/g, '/').replace(/~0/g, '~');\n\t        if (!object.hasOwnProperty(components[0]))\n\t          return;\n\t        object = object[components[0]];\n\t        components.shift();\n\t      }\n\t      return object;\n\t    } else\n\t      return;\n\t  };\n\t\n\t  var checkValidity = function (env, schema_stack, object_stack, options) {\n\t    var i, len, count, hasProp, hasPattern;\n\t    var p, v, malformed = false, objerrs = {}, objerr, props, matched;\n\t    var sl = schema_stack.length-1, schema = schema_stack[sl], new_stack;\n\t    var ol = object_stack.length-1, object = object_stack[ol].object, name = object_stack[ol].key, prop = object[name];\n\t    var errCount, minErrCount;\n\t\n\t    if (schema.hasOwnProperty('$ref')) {\n\t      schema_stack= resolveURI(env, schema_stack, schema.$ref);\n\t      if (!schema_stack)\n\t        return {'$ref': schema.$ref};\n\t      else\n\t        return checkValidity(env, schema_stack, object_stack, options);\n\t    }\n\t\n\t    if (schema.hasOwnProperty('type')) {\n\t      if (typeof schema.type === 'string') {\n\t        if (options.useCoerce && env.coerceType.hasOwnProperty(schema.type))\n\t          prop = object[name] = env.coerceType[schema.type](prop);\n\t        if (!env.fieldType[schema.type](prop))\n\t          return {'type': schema.type};\n\t      } else {\n\t        malformed = true;\n\t        for (i = 0, len = schema.type.length; i < len && malformed; i++)\n\t          if (env.fieldType[schema.type[i]](prop))\n\t            malformed = false;\n\t        if (malformed)\n\t          return {'type': schema.type};\n\t      }\n\t    }\n\t\n\t    if (schema.hasOwnProperty('allOf')) {\n\t      for (i = 0, len = schema.allOf.length; i < len; i++) {\n\t        objerr = checkValidity(env, schema_stack.concat(schema.allOf[i]), object_stack, options);\n\t        if (objerr)\n\t          return objerr;\n\t      }\n\t    }\n\t\n\t    if (!options.useCoerce && !options.useDefault && !options.removeAdditional) {\n\t      if (schema.hasOwnProperty('oneOf')) {\n\t        minErrCount = Infinity;\n\t        for (i = 0, len = schema.oneOf.length, count = 0; i < len; i++) {\n\t          objerr = checkValidity(env, schema_stack.concat(schema.oneOf[i]), object_stack, options);\n\t          if (!objerr) {\n\t            count = count + 1;\n\t            if (count > 1)\n\t              break;\n\t          } else {\n\t            errCount = objerr.schema ? Object.keys(objerr.schema).length : 1;\n\t            if (errCount < minErrCount) {\n\t                minErrCount = errCount;\n\t                objerrs = objerr;\n\t            }\n\t          }\n\t        }\n\t        if (count > 1)\n\t          return {'oneOf': true};\n\t        else if (count < 1)\n\t          return objerrs;\n\t        objerrs = {};\n\t      }\n\t\n\t      if (schema.hasOwnProperty('anyOf')) {\n\t        objerrs = null;\n\t        minErrCount = Infinity;\n\t        for (i = 0, len = schema.anyOf.length; i < len; i++) {\n\t          objerr = checkValidity(env, schema_stack.concat(schema.anyOf[i]), object_stack, options);\n\t          if (!objerr) {\n\t            objerrs = null;\n\t            break;\n\t          }\n\t          else {\n\t            errCount = objerr.schema ? Object.keys(objerr.schema).length : 1;\n\t            if (errCount < minErrCount) {\n\t                minErrCount = errCount;\n\t                objerrs = objerr;\n\t            }\n\t          }\n\t        }\n\t        if (objerrs)\n\t          return objerrs;\n\t      }\n\t\n\t      if (schema.hasOwnProperty('not')) {\n\t        objerr = checkValidity(env, schema_stack.concat(schema.not), object_stack, options);\n\t        if (!objerr)\n\t          return {'not': true};\n\t      }\n\t    } else {\n\t      if (schema.hasOwnProperty('oneOf')) {\n\t        minErrCount = Infinity;\n\t        for (i = 0, len = schema.oneOf.length, count = 0; i < len; i++) {\n\t          new_stack = clone_stack(object_stack);\n\t          objerr = checkValidity(env, schema_stack.concat(schema.oneOf[i]), new_stack, options);\n\t          if (!objerr) {\n\t            count = count + 1;\n\t            if (count > 1)\n\t              break;\n\t            else\n\t              copy_stack(new_stack, object_stack);\n\t          } else {\n\t            errCount = objerr.schema ? Object.keys(objerr.schema).length : 1;\n\t            if (errCount < minErrCount) {\n\t                minErrCount = errCount;\n\t                objerrs = objerr;\n\t            }\n\t          }\n\t        }\n\t        if (count > 1)\n\t          return {'oneOf': true};\n\t        else if (count < 1)\n\t          return objerrs;\n\t        objerrs = {};\n\t      }\n\t\n\t      if (schema.hasOwnProperty('anyOf')) {\n\t        objerrs = null;\n\t        minErrCount = Infinity;\n\t        for (i = 0, len = schema.anyOf.length; i < len; i++) {\n\t          new_stack = clone_stack(object_stack);\n\t          objerr = checkValidity(env, schema_stack.concat(schema.anyOf[i]), new_stack, options);\n\t          if (!objerr) {\n\t            copy_stack(new_stack, object_stack);\n\t            objerrs = null;\n\t            break;\n\t          }\n\t          else {\n\t            errCount = objerr.schema ? Object.keys(objerr.schema).length : 1;\n\t            if (errCount < minErrCount) {\n\t                minErrCount = errCount;\n\t                objerrs = objerr;\n\t            }\n\t          }\n\t        }\n\t        if (objerrs)\n\t          return objerrs;\n\t      }\n\t\n\t      if (schema.hasOwnProperty('not')) {\n\t        new_stack = clone_stack(object_stack);\n\t        objerr = checkValidity(env, schema_stack.concat(schema.not), new_stack, options);\n\t        if (!objerr)\n\t          return {'not': true};\n\t      }\n\t    }\n\t\n\t    if (schema.hasOwnProperty('dependencies')) {\n\t      for (p in schema.dependencies)\n\t        if (schema.dependencies.hasOwnProperty(p) && prop.hasOwnProperty(p)) {\n\t          if (Array.isArray(schema.dependencies[p])) {\n\t            for (i = 0, len = schema.dependencies[p].length; i < len; i++)\n\t              if (!prop.hasOwnProperty(schema.dependencies[p][i])) {\n\t                return {'dependencies': true};\n\t              }\n\t          } else {\n\t            objerr = checkValidity(env, schema_stack.concat(schema.dependencies[p]), object_stack, options);\n\t            if (objerr)\n\t              return objerr;\n\t          }\n\t        }\n\t    }\n\t\n\t    if (!Array.isArray(prop)) {\n\t      props = [];\n\t      objerrs = {};\n\t      for (p in prop)\n\t        if (prop.hasOwnProperty(p))\n\t          props.push(p);\n\t\n\t      if (options.checkRequired && schema.required) {\n\t        for (i = 0, len = schema.required.length; i < len; i++)\n\t          if (!prop.hasOwnProperty(schema.required[i])) {\n\t            objerrs[schema.required[i]] = {'required': true};\n\t            malformed = true;\n\t          }\n\t      }\n\t\n\t      hasProp = schema.hasOwnProperty('properties');\n\t      hasPattern = schema.hasOwnProperty('patternProperties');\n\t      if (hasProp || hasPattern) {\n\t        i = props.length;\n\t        while (i--) {\n\t          matched = false;\n\t          if (hasProp && schema.properties.hasOwnProperty(props[i])) {\n\t            matched = true;\n\t            objerr = checkValidity(env, schema_stack.concat(schema.properties[props[i]]), object_stack.concat({object: prop, key: props[i]}), options);\n\t            if (objerr !== null) {\n\t              objerrs[props[i]] = objerr;\n\t              malformed = true;\n\t            }\n\t          }\n\t          if (hasPattern) {\n\t            for (p in schema.patternProperties)\n\t              if (schema.patternProperties.hasOwnProperty(p) && props[i].match(p)) {\n\t                matched = true;\n\t                objerr = checkValidity(env, schema_stack.concat(schema.patternProperties[p]), object_stack.concat({object: prop, key: props[i]}), options);\n\t                if (objerr !== null) {\n\t                  objerrs[props[i]] = objerr;\n\t                  malformed = true;\n\t                }\n\t              }\n\t          }\n\t          if (matched)\n\t            props.splice(i, 1);\n\t        }\n\t      }\n\t\n\t      if (options.useDefault && hasProp && !malformed) {\n\t        for (p in schema.properties)\n\t          if (schema.properties.hasOwnProperty(p) && !prop.hasOwnProperty(p) && schema.properties[p].hasOwnProperty('default'))\n\t            prop[p] = schema.properties[p]['default'];\n\t      }\n\t\n\t      if (options.removeAdditional && hasProp && schema.additionalProperties !== true && typeof schema.additionalProperties !== 'object') {\n\t        for (i = 0, len = props.length; i < len; i++)\n\t          delete prop[props[i]];\n\t      } else {\n\t        if (schema.hasOwnProperty('additionalProperties')) {\n\t          if (typeof schema.additionalProperties === 'boolean') {\n\t            if (!schema.additionalProperties) {\n\t              for (i = 0, len = props.length; i < len; i++) {\n\t                objerrs[props[i]] = {'additional': true};\n\t                malformed = true;\n\t              }\n\t            }\n\t          } else {\n\t            for (i = 0, len = props.length; i < len; i++) {\n\t              objerr = checkValidity(env, schema_stack.concat(schema.additionalProperties), object_stack.concat({object: prop, key: props[i]}), options);\n\t              if (objerr !== null) {\n\t                objerrs[props[i]] = objerr;\n\t                malformed = true;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t      if (malformed)\n\t        return {'schema': objerrs};\n\t    } else {\n\t      if (schema.hasOwnProperty('items')) {\n\t        if (Array.isArray(schema.items)) {\n\t          for (i = 0, len = schema.items.length; i < len; i++) {\n\t            objerr = checkValidity(env, schema_stack.concat(schema.items[i]), object_stack.concat({object: prop, key: i}), options);\n\t            if (objerr !== null) {\n\t              objerrs[i] = objerr;\n\t              malformed = true;\n\t            }\n\t          }\n\t          if (prop.length > len && schema.hasOwnProperty('additionalItems')) {\n\t            if (typeof schema.additionalItems === 'boolean') {\n\t              if (!schema.additionalItems)\n\t                return {'additionalItems': true};\n\t            } else {\n\t              for (i = len, len = prop.length; i < len; i++) {\n\t                objerr = checkValidity(env, schema_stack.concat(schema.additionalItems), object_stack.concat({object: prop, key: i}), options);\n\t                if (objerr !== null) {\n\t                  objerrs[i] = objerr;\n\t                  malformed = true;\n\t                }\n\t              }\n\t            }\n\t          }\n\t        } else {\n\t          for (i = 0, len = prop.length; i < len; i++) {\n\t            objerr = checkValidity(env, schema_stack.concat(schema.items), object_stack.concat({object: prop, key: i}), options);\n\t            if (objerr !== null) {\n\t              objerrs[i] = objerr;\n\t              malformed = true;\n\t            }\n\t          }\n\t        }\n\t      } else if (schema.hasOwnProperty('additionalItems')) {\n\t        if (typeof schema.additionalItems !== 'boolean') {\n\t          for (i = 0, len = prop.length; i < len; i++) {\n\t            objerr = checkValidity(env, schema_stack.concat(schema.additionalItems), object_stack.concat({object: prop, key: i}), options);\n\t            if (objerr !== null) {\n\t              objerrs[i] = objerr;\n\t              malformed = true;\n\t            }\n\t          }\n\t        }\n\t      }\n\t      if (malformed)\n\t        return {'schema': objerrs};\n\t    }\n\t\n\t    for (v in schema) {\n\t      if (schema.hasOwnProperty(v) && !handled.hasOwnProperty(v)) {\n\t        if (v === 'format') {\n\t          if (env.fieldFormat.hasOwnProperty(schema[v]) && !env.fieldFormat[schema[v]](prop, schema, object_stack, options)) {\n\t            objerrs[v] = true;\n\t            malformed = true;\n\t          }\n\t        } else {\n\t          if (env.fieldValidate.hasOwnProperty(v) && !env.fieldValidate[v](prop, schema[v].hasOwnProperty('$data') ? resolveObjectRef(object_stack, schema[v].$data) : schema[v], schema, object_stack, options)) {\n\t            objerrs[v] = true;\n\t            malformed = true;\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    if (malformed)\n\t      return objerrs;\n\t    else\n\t      return null;\n\t  };\n\t\n\t  var defaultOptions = {\n\t    useDefault: false,\n\t    useCoerce: false,\n\t    checkRequired: true,\n\t    removeAdditional: false\n\t  };\n\t\n\t  function Environment() {\n\t    if (!(this instanceof Environment))\n\t      return new Environment();\n\t\n\t    this.coerceType = {};\n\t    this.fieldType = clone(fieldType);\n\t    this.fieldValidate = clone(fieldValidate);\n\t    this.fieldFormat = clone(fieldFormat);\n\t    this.defaultOptions = clone(defaultOptions);\n\t    this.schema = {};\n\t  }\n\t\n\t  Environment.prototype = {\n\t    validate: function (name, object, options) {\n\t      var schema_stack = [name], errors = null, object_stack = [{object: {'__root__': object}, key: '__root__'}];\n\t\n\t      if (typeof name === 'string') {\n\t        schema_stack = resolveURI(this, null, name);\n\t        if (!schema_stack)\n\t          throw new Error('jjv: could not find schema \\'' + name + '\\'.');\n\t      }\n\t\n\t      if (!options) {\n\t        options = this.defaultOptions;\n\t      } else {\n\t        for (var p in this.defaultOptions)\n\t          if (this.defaultOptions.hasOwnProperty(p) && !options.hasOwnProperty(p))\n\t            options[p] = this.defaultOptions[p];\n\t      }\n\t\n\t      errors = checkValidity(this, schema_stack, object_stack, options);\n\t\n\t      if (errors)\n\t        return {validation: errors.hasOwnProperty('schema') ? errors.schema : errors};\n\t      else\n\t        return null;\n\t    },\n\t\n\t    resolveRef: function (schema_stack, $ref) {\n\t      return resolveURI(this, schema_stack, $ref);\n\t    },\n\t\n\t    addType: function (name, func) {\n\t      this.fieldType[name] = func;\n\t    },\n\t\n\t    addTypeCoercion: function (type, func) {\n\t      this.coerceType[type] = func;\n\t    },\n\t\n\t    addCheck: function (name, func) {\n\t      this.fieldValidate[name] = func;\n\t    },\n\t\n\t    addFormat: function (name, func) {\n\t      this.fieldFormat[name] = func;\n\t    },\n\t\n\t    addSchema: function (name, schema) {\n\t      if (!schema && name) {\n\t        schema = name;\n\t        name = undefined;\n\t      }\n\t      if (schema.hasOwnProperty('id') && typeof schema.id === 'string' && schema.id !== name) {\n\t        if (schema.id.charAt(0) === '/')\n\t          throw new Error('jjv: schema id\\'s starting with / are invalid.');\n\t        this.schema[normalizeID(schema.id)] = schema;\n\t      } else if (!name) {\n\t        throw new Error('jjv: schema needs either a name or id attribute.');\n\t      }\n\t      if (name)\n\t        this.schema[normalizeID(name)] = schema;\n\t    }\n\t  };\n\t\n\t  // Export for use in server and client.\n\t  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined')\n\t    module.exports = Environment;\n\t  else if (true)\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {return Environment;}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  else\n\t    this.jjv = Environment;\n\t}).call(this);\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap f6d367463769a0b932b2\n **/","function KotoConfig(schema) {\n  const jjv = require('jjv');\n  // TODO: add new types  here\n\n  return function Decorator(target) {\n    const validator = jjv();\n    const proxyConfig = target.prototype.config;\n    target.prototype.config = function proxy(name, value) {\n      const errors = validator.validate(schema, { [name]: value });\n      if (!errors) {\n        return proxyConfig.call(this, name, value);\n      }\n      // TODO: handle errors\n      throw Error('invald config');\n    };\n  };\n}\n\nif (ON_TEST) {\n  require('./index.spec.js')(KotoConfig);\n}\n\nexport default KotoConfig;\n\n\n\n/** WEBPACK FOOTER **\n ** ./index.js\n **/","module.exports = require('./lib/jjv.js');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/jjv/index.js\n ** module id = 1\n ** module chunks = 0\n **/","/* jshint proto: true */\n\n/**\n * jjv.js -- A javascript library to validate json input through a json-schema.\n *\n * Copyright (c) 2013 Alex Cornejo.\n *\n * Redistributable under a MIT-style open source license.\n */\n\n(function () {\n  var clone = function (obj) {\n      // Handle the 3 simple types (string, number, function), and null or undefined\n      if (obj === null || typeof obj !== 'object') return obj;\n      var copy;\n\n      // Handle Date\n      if (obj instanceof Date) {\n          copy = new Date();\n          copy.setTime(obj.getTime());\n          return copy;\n      }\n\n      // handle RegExp\n      if (obj instanceof RegExp) {\n        copy = new RegExp(obj);\n        return copy;\n      }\n\n      // Handle Array\n      if (obj instanceof Array) {\n          copy = [];\n          for (var i = 0, len = obj.length; i < len; i++)\n              copy[i] = clone(obj[i]);\n          return copy;\n      }\n\n      // Handle Object\n      if (obj instanceof Object) {\n          copy = {};\n//           copy = Object.create(Object.getPrototypeOf(obj));\n          for (var attr in obj) {\n              if (obj.hasOwnProperty(attr))\n                copy[attr] = clone(obj[attr]);\n          }\n          return copy;\n      }\n\n      throw new Error(\"Unable to clone object!\");\n  };\n\n  var clone_stack = function (stack) {\n    var new_stack = [ clone(stack[0]) ], key = new_stack[0].key, obj = new_stack[0].object;\n    for (var i = 1, len = stack.length; i< len; i++) {\n      obj = obj[key];\n      key = stack[i].key;\n      new_stack.push({ object: obj, key: key });\n    }\n    return new_stack;\n  };\n\n  var copy_stack = function (new_stack, old_stack) {\n    var stack_last = new_stack.length-1, key = new_stack[stack_last].key;\n    old_stack[stack_last].object[key] = new_stack[stack_last].object[key];\n  };\n\n  var handled = {\n    'type': true,\n    'not': true,\n    'anyOf': true,\n    'allOf': true,\n    'oneOf': true,\n    '$ref': true,\n    '$schema': true,\n    'id': true,\n    'exclusiveMaximum': true,\n    'exclusiveMininum': true,\n    'properties': true,\n    'patternProperties': true,\n    'additionalProperties': true,\n    'items': true,\n    'additionalItems': true,\n    'required': true,\n    'default': true,\n    'title': true,\n    'description': true,\n    'definitions': true,\n    'dependencies': true\n  };\n\n  var fieldType = {\n    'null': function (x) {\n      return x === null;\n    },\n    'string': function (x) {\n      return typeof x === 'string';\n    },\n    'boolean': function (x) {\n      return typeof x === 'boolean';\n    },\n    'number': function (x) {\n      // Use x === x instead of !isNaN(x) for speed\n      return typeof x === 'number' && x === x;\n    },\n    'integer': function (x) {\n      return typeof x === 'number' && x%1 === 0;\n    },\n    'object': function (x) {\n      return x && typeof x === 'object' && !Array.isArray(x);\n    },\n    'array': function (x) {\n      return Array.isArray(x);\n    },\n    'date': function (x) {\n      return x instanceof Date;\n    }\n  };\n\n  // missing: uri, date-time, ipv4, ipv6\n  var fieldFormat = {\n    'alpha': function (v) {\n      return (/^[a-zA-Z]+$/).test(v);\n    },\n    'alphanumeric': function (v) {\n      return (/^[a-zA-Z0-9]+$/).test(v);\n    },\n    'identifier': function (v) {\n      return (/^[-_a-zA-Z0-9]+$/).test(v);\n    },\n    'hexadecimal': function (v) {\n      return (/^[a-fA-F0-9]+$/).test(v);\n    },\n    'numeric': function (v) {\n      return (/^[0-9]+$/).test(v);\n    },\n    'date-time': function (v) {\n      return !isNaN(Date.parse(v)) && v.indexOf('/') === -1;\n    },\n    'uppercase': function (v) {\n      return v === v.toUpperCase();\n    },\n    'lowercase': function (v) {\n      return v === v.toLowerCase();\n    },\n    'hostname': function (v) {\n      return v.length < 256 && (/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])(\\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9]))*$/).test(v);\n    },\n    'uri': function (v) {\n      return (/[-a-zA-Z0-9@:%_\\+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_\\+.~#?&//=]*)?/).test(v);\n    },\n    'email': function (v) { // email, ipv4 and ipv6 adapted from node-validator\n      return (/^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/).test(v);\n    },\n    'ipv4': function (v) {\n      if ((/^(\\d?\\d?\\d)\\.(\\d?\\d?\\d)\\.(\\d?\\d?\\d)\\.(\\d?\\d?\\d)$/).test(v)) {\n        var parts = v.split('.').sort();\n        if (parts[3] <= 255)\n          return true;\n      }\n      return false;\n    },\n    'ipv6': function(v) {\n      return (/^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/).test(v);\n     /*  return (/^::|^::1|^([a-fA-F0-9]{1,4}::?){1,7}([a-fA-F0-9]{1,4})$/).test(v); */\n    }\n  };\n\n  var fieldValidate = {\n    'readOnly': function (v, p) {\n      return false;\n    },\n    // ****** numeric validation ********\n    'minimum': function (v, p, schema) {\n      return !(v < p || schema.exclusiveMinimum && v <= p);\n    },\n    'maximum': function (v, p, schema) {\n      return !(v > p || schema.exclusiveMaximum && v >= p);\n    },\n    'multipleOf': function (v, p) {\n      return (v/p)%1 === 0 || typeof v !== 'number';\n    },\n    // ****** string validation ******\n    'pattern': function (v, p) {\n      if (typeof v !== 'string')\n        return true;\n      var pattern, modifiers;\n      if (typeof p === 'string')\n        pattern=p;\n      else {\n        pattern=p[0];\n        modifiers=p[1];\n      }\n      var regex = new RegExp(pattern, modifiers);\n      return regex.test(v);\n    },\n    'minLength': function (v, p) {\n      return v.length >= p || typeof v !== 'string';\n    },\n    'maxLength': function (v, p) {\n      return v.length <= p || typeof v !== 'string';\n    },\n    // ***** array validation *****\n    'minItems': function (v, p) {\n      return v.length >= p || !Array.isArray(v);\n    },\n    'maxItems': function (v, p) {\n      return v.length <= p || !Array.isArray(v);\n    },\n    'uniqueItems': function (v, p) {\n      var hash = {}, key;\n      for (var i = 0, len = v.length; i < len; i++) {\n        key = JSON.stringify(v[i]);\n        if (hash.hasOwnProperty(key))\n          return false;\n        else\n          hash[key] = true;\n      }\n      return true;\n    },\n    // ***** object validation ****\n    'minProperties': function (v, p) {\n      if (typeof v !== 'object')\n        return true;\n      var count = 0;\n      for (var attr in v) if (v.hasOwnProperty(attr)) count = count + 1;\n      return count >= p;\n    },\n    'maxProperties': function (v, p) {\n      if (typeof v !== 'object')\n        return true;\n      var count = 0;\n      for (var attr in v) if (v.hasOwnProperty(attr)) count = count + 1;\n      return count <= p;\n    },\n    // ****** all *****\n    'constant': function (v, p) {\n      return JSON.stringify(v) == JSON.stringify(p);\n    },\n    'enum': function (v, p) {\n      var i, len, vs;\n      if (typeof v === 'object') {\n        vs = JSON.stringify(v);\n        for (i = 0, len = p.length; i < len; i++)\n          if (vs === JSON.stringify(p[i]))\n            return true;\n      } else {\n        for (i = 0, len = p.length; i < len; i++)\n          if (v === p[i])\n            return true;\n      }\n      return false;\n    }\n  };\n\n  var normalizeID = function (id) {\n    return id.indexOf(\"://\") === -1 ? id : id.split(\"#\")[0];\n  };\n\n  var resolveURI = function (env, schema_stack, uri) {\n    var curschema, components, hash_idx, name;\n\n    hash_idx = uri.indexOf('#');\n\n    if (hash_idx === -1) {\n      if (!env.schema.hasOwnProperty(uri))\n        return null;\n      return [env.schema[uri]];\n    }\n\n    if (hash_idx > 0) {\n      name = uri.substr(0, hash_idx);\n      uri = uri.substr(hash_idx+1);\n      if (!env.schema.hasOwnProperty(name)) {\n        if (schema_stack && schema_stack[0].id === name)\n          schema_stack = [schema_stack[0]];\n        else\n          return null;\n      } else\n        schema_stack = [env.schema[name]];\n    } else {\n      if (!schema_stack)\n        return null;\n      uri = uri.substr(1);\n    }\n\n    if (uri === '')\n      return [schema_stack[0]];\n\n    if (uri.charAt(0) === '/') {\n      uri = uri.substr(1);\n      curschema = schema_stack[0];\n      components = uri.split('/');\n      while (components.length > 0) {\n        if (!curschema.hasOwnProperty(components[0]))\n          return null;\n        curschema = curschema[components[0]];\n        schema_stack.push(curschema);\n        components.shift();\n      }\n      return schema_stack;\n    } else // FIX: should look for subschemas whose id matches uri\n      return null;\n  };\n\n  var resolveObjectRef = function (object_stack, uri) {\n    var components, object, last_frame = object_stack.length-1, skip_frames, frame, m = /^(\\d+)/.exec(uri);\n\n    if (m) {\n      uri = uri.substr(m[0].length);\n      skip_frames = parseInt(m[1], 10);\n      if (skip_frames < 0 || skip_frames > last_frame)\n        return;\n      frame = object_stack[last_frame-skip_frames];\n      if (uri === '#')\n        return frame.key;\n    } else\n      frame = object_stack[0];\n\n    object = frame.object[frame.key];\n\n    if (uri === '')\n      return object;\n\n    if (uri.charAt(0) === '/') {\n      uri = uri.substr(1);\n      components = uri.split('/');\n      while (components.length > 0) {\n        components[0] = components[0].replace(/~1/g, '/').replace(/~0/g, '~');\n        if (!object.hasOwnProperty(components[0]))\n          return;\n        object = object[components[0]];\n        components.shift();\n      }\n      return object;\n    } else\n      return;\n  };\n\n  var checkValidity = function (env, schema_stack, object_stack, options) {\n    var i, len, count, hasProp, hasPattern;\n    var p, v, malformed = false, objerrs = {}, objerr, props, matched;\n    var sl = schema_stack.length-1, schema = schema_stack[sl], new_stack;\n    var ol = object_stack.length-1, object = object_stack[ol].object, name = object_stack[ol].key, prop = object[name];\n    var errCount, minErrCount;\n\n    if (schema.hasOwnProperty('$ref')) {\n      schema_stack= resolveURI(env, schema_stack, schema.$ref);\n      if (!schema_stack)\n        return {'$ref': schema.$ref};\n      else\n        return checkValidity(env, schema_stack, object_stack, options);\n    }\n\n    if (schema.hasOwnProperty('type')) {\n      if (typeof schema.type === 'string') {\n        if (options.useCoerce && env.coerceType.hasOwnProperty(schema.type))\n          prop = object[name] = env.coerceType[schema.type](prop);\n        if (!env.fieldType[schema.type](prop))\n          return {'type': schema.type};\n      } else {\n        malformed = true;\n        for (i = 0, len = schema.type.length; i < len && malformed; i++)\n          if (env.fieldType[schema.type[i]](prop))\n            malformed = false;\n        if (malformed)\n          return {'type': schema.type};\n      }\n    }\n\n    if (schema.hasOwnProperty('allOf')) {\n      for (i = 0, len = schema.allOf.length; i < len; i++) {\n        objerr = checkValidity(env, schema_stack.concat(schema.allOf[i]), object_stack, options);\n        if (objerr)\n          return objerr;\n      }\n    }\n\n    if (!options.useCoerce && !options.useDefault && !options.removeAdditional) {\n      if (schema.hasOwnProperty('oneOf')) {\n        minErrCount = Infinity;\n        for (i = 0, len = schema.oneOf.length, count = 0; i < len; i++) {\n          objerr = checkValidity(env, schema_stack.concat(schema.oneOf[i]), object_stack, options);\n          if (!objerr) {\n            count = count + 1;\n            if (count > 1)\n              break;\n          } else {\n            errCount = objerr.schema ? Object.keys(objerr.schema).length : 1;\n            if (errCount < minErrCount) {\n                minErrCount = errCount;\n                objerrs = objerr;\n            }\n          }\n        }\n        if (count > 1)\n          return {'oneOf': true};\n        else if (count < 1)\n          return objerrs;\n        objerrs = {};\n      }\n\n      if (schema.hasOwnProperty('anyOf')) {\n        objerrs = null;\n        minErrCount = Infinity;\n        for (i = 0, len = schema.anyOf.length; i < len; i++) {\n          objerr = checkValidity(env, schema_stack.concat(schema.anyOf[i]), object_stack, options);\n          if (!objerr) {\n            objerrs = null;\n            break;\n          }\n          else {\n            errCount = objerr.schema ? Object.keys(objerr.schema).length : 1;\n            if (errCount < minErrCount) {\n                minErrCount = errCount;\n                objerrs = objerr;\n            }\n          }\n        }\n        if (objerrs)\n          return objerrs;\n      }\n\n      if (schema.hasOwnProperty('not')) {\n        objerr = checkValidity(env, schema_stack.concat(schema.not), object_stack, options);\n        if (!objerr)\n          return {'not': true};\n      }\n    } else {\n      if (schema.hasOwnProperty('oneOf')) {\n        minErrCount = Infinity;\n        for (i = 0, len = schema.oneOf.length, count = 0; i < len; i++) {\n          new_stack = clone_stack(object_stack);\n          objerr = checkValidity(env, schema_stack.concat(schema.oneOf[i]), new_stack, options);\n          if (!objerr) {\n            count = count + 1;\n            if (count > 1)\n              break;\n            else\n              copy_stack(new_stack, object_stack);\n          } else {\n            errCount = objerr.schema ? Object.keys(objerr.schema).length : 1;\n            if (errCount < minErrCount) {\n                minErrCount = errCount;\n                objerrs = objerr;\n            }\n          }\n        }\n        if (count > 1)\n          return {'oneOf': true};\n        else if (count < 1)\n          return objerrs;\n        objerrs = {};\n      }\n\n      if (schema.hasOwnProperty('anyOf')) {\n        objerrs = null;\n        minErrCount = Infinity;\n        for (i = 0, len = schema.anyOf.length; i < len; i++) {\n          new_stack = clone_stack(object_stack);\n          objerr = checkValidity(env, schema_stack.concat(schema.anyOf[i]), new_stack, options);\n          if (!objerr) {\n            copy_stack(new_stack, object_stack);\n            objerrs = null;\n            break;\n          }\n          else {\n            errCount = objerr.schema ? Object.keys(objerr.schema).length : 1;\n            if (errCount < minErrCount) {\n                minErrCount = errCount;\n                objerrs = objerr;\n            }\n          }\n        }\n        if (objerrs)\n          return objerrs;\n      }\n\n      if (schema.hasOwnProperty('not')) {\n        new_stack = clone_stack(object_stack);\n        objerr = checkValidity(env, schema_stack.concat(schema.not), new_stack, options);\n        if (!objerr)\n          return {'not': true};\n      }\n    }\n\n    if (schema.hasOwnProperty('dependencies')) {\n      for (p in schema.dependencies)\n        if (schema.dependencies.hasOwnProperty(p) && prop.hasOwnProperty(p)) {\n          if (Array.isArray(schema.dependencies[p])) {\n            for (i = 0, len = schema.dependencies[p].length; i < len; i++)\n              if (!prop.hasOwnProperty(schema.dependencies[p][i])) {\n                return {'dependencies': true};\n              }\n          } else {\n            objerr = checkValidity(env, schema_stack.concat(schema.dependencies[p]), object_stack, options);\n            if (objerr)\n              return objerr;\n          }\n        }\n    }\n\n    if (!Array.isArray(prop)) {\n      props = [];\n      objerrs = {};\n      for (p in prop)\n        if (prop.hasOwnProperty(p))\n          props.push(p);\n\n      if (options.checkRequired && schema.required) {\n        for (i = 0, len = schema.required.length; i < len; i++)\n          if (!prop.hasOwnProperty(schema.required[i])) {\n            objerrs[schema.required[i]] = {'required': true};\n            malformed = true;\n          }\n      }\n\n      hasProp = schema.hasOwnProperty('properties');\n      hasPattern = schema.hasOwnProperty('patternProperties');\n      if (hasProp || hasPattern) {\n        i = props.length;\n        while (i--) {\n          matched = false;\n          if (hasProp && schema.properties.hasOwnProperty(props[i])) {\n            matched = true;\n            objerr = checkValidity(env, schema_stack.concat(schema.properties[props[i]]), object_stack.concat({object: prop, key: props[i]}), options);\n            if (objerr !== null) {\n              objerrs[props[i]] = objerr;\n              malformed = true;\n            }\n          }\n          if (hasPattern) {\n            for (p in schema.patternProperties)\n              if (schema.patternProperties.hasOwnProperty(p) && props[i].match(p)) {\n                matched = true;\n                objerr = checkValidity(env, schema_stack.concat(schema.patternProperties[p]), object_stack.concat({object: prop, key: props[i]}), options);\n                if (objerr !== null) {\n                  objerrs[props[i]] = objerr;\n                  malformed = true;\n                }\n              }\n          }\n          if (matched)\n            props.splice(i, 1);\n        }\n      }\n\n      if (options.useDefault && hasProp && !malformed) {\n        for (p in schema.properties)\n          if (schema.properties.hasOwnProperty(p) && !prop.hasOwnProperty(p) && schema.properties[p].hasOwnProperty('default'))\n            prop[p] = schema.properties[p]['default'];\n      }\n\n      if (options.removeAdditional && hasProp && schema.additionalProperties !== true && typeof schema.additionalProperties !== 'object') {\n        for (i = 0, len = props.length; i < len; i++)\n          delete prop[props[i]];\n      } else {\n        if (schema.hasOwnProperty('additionalProperties')) {\n          if (typeof schema.additionalProperties === 'boolean') {\n            if (!schema.additionalProperties) {\n              for (i = 0, len = props.length; i < len; i++) {\n                objerrs[props[i]] = {'additional': true};\n                malformed = true;\n              }\n            }\n          } else {\n            for (i = 0, len = props.length; i < len; i++) {\n              objerr = checkValidity(env, schema_stack.concat(schema.additionalProperties), object_stack.concat({object: prop, key: props[i]}), options);\n              if (objerr !== null) {\n                objerrs[props[i]] = objerr;\n                malformed = true;\n              }\n            }\n          }\n        }\n      }\n      if (malformed)\n        return {'schema': objerrs};\n    } else {\n      if (schema.hasOwnProperty('items')) {\n        if (Array.isArray(schema.items)) {\n          for (i = 0, len = schema.items.length; i < len; i++) {\n            objerr = checkValidity(env, schema_stack.concat(schema.items[i]), object_stack.concat({object: prop, key: i}), options);\n            if (objerr !== null) {\n              objerrs[i] = objerr;\n              malformed = true;\n            }\n          }\n          if (prop.length > len && schema.hasOwnProperty('additionalItems')) {\n            if (typeof schema.additionalItems === 'boolean') {\n              if (!schema.additionalItems)\n                return {'additionalItems': true};\n            } else {\n              for (i = len, len = prop.length; i < len; i++) {\n                objerr = checkValidity(env, schema_stack.concat(schema.additionalItems), object_stack.concat({object: prop, key: i}), options);\n                if (objerr !== null) {\n                  objerrs[i] = objerr;\n                  malformed = true;\n                }\n              }\n            }\n          }\n        } else {\n          for (i = 0, len = prop.length; i < len; i++) {\n            objerr = checkValidity(env, schema_stack.concat(schema.items), object_stack.concat({object: prop, key: i}), options);\n            if (objerr !== null) {\n              objerrs[i] = objerr;\n              malformed = true;\n            }\n          }\n        }\n      } else if (schema.hasOwnProperty('additionalItems')) {\n        if (typeof schema.additionalItems !== 'boolean') {\n          for (i = 0, len = prop.length; i < len; i++) {\n            objerr = checkValidity(env, schema_stack.concat(schema.additionalItems), object_stack.concat({object: prop, key: i}), options);\n            if (objerr !== null) {\n              objerrs[i] = objerr;\n              malformed = true;\n            }\n          }\n        }\n      }\n      if (malformed)\n        return {'schema': objerrs};\n    }\n\n    for (v in schema) {\n      if (schema.hasOwnProperty(v) && !handled.hasOwnProperty(v)) {\n        if (v === 'format') {\n          if (env.fieldFormat.hasOwnProperty(schema[v]) && !env.fieldFormat[schema[v]](prop, schema, object_stack, options)) {\n            objerrs[v] = true;\n            malformed = true;\n          }\n        } else {\n          if (env.fieldValidate.hasOwnProperty(v) && !env.fieldValidate[v](prop, schema[v].hasOwnProperty('$data') ? resolveObjectRef(object_stack, schema[v].$data) : schema[v], schema, object_stack, options)) {\n            objerrs[v] = true;\n            malformed = true;\n          }\n        }\n      }\n    }\n\n    if (malformed)\n      return objerrs;\n    else\n      return null;\n  };\n\n  var defaultOptions = {\n    useDefault: false,\n    useCoerce: false,\n    checkRequired: true,\n    removeAdditional: false\n  };\n\n  function Environment() {\n    if (!(this instanceof Environment))\n      return new Environment();\n\n    this.coerceType = {};\n    this.fieldType = clone(fieldType);\n    this.fieldValidate = clone(fieldValidate);\n    this.fieldFormat = clone(fieldFormat);\n    this.defaultOptions = clone(defaultOptions);\n    this.schema = {};\n  }\n\n  Environment.prototype = {\n    validate: function (name, object, options) {\n      var schema_stack = [name], errors = null, object_stack = [{object: {'__root__': object}, key: '__root__'}];\n\n      if (typeof name === 'string') {\n        schema_stack = resolveURI(this, null, name);\n        if (!schema_stack)\n          throw new Error('jjv: could not find schema \\'' + name + '\\'.');\n      }\n\n      if (!options) {\n        options = this.defaultOptions;\n      } else {\n        for (var p in this.defaultOptions)\n          if (this.defaultOptions.hasOwnProperty(p) && !options.hasOwnProperty(p))\n            options[p] = this.defaultOptions[p];\n      }\n\n      errors = checkValidity(this, schema_stack, object_stack, options);\n\n      if (errors)\n        return {validation: errors.hasOwnProperty('schema') ? errors.schema : errors};\n      else\n        return null;\n    },\n\n    resolveRef: function (schema_stack, $ref) {\n      return resolveURI(this, schema_stack, $ref);\n    },\n\n    addType: function (name, func) {\n      this.fieldType[name] = func;\n    },\n\n    addTypeCoercion: function (type, func) {\n      this.coerceType[type] = func;\n    },\n\n    addCheck: function (name, func) {\n      this.fieldValidate[name] = func;\n    },\n\n    addFormat: function (name, func) {\n      this.fieldFormat[name] = func;\n    },\n\n    addSchema: function (name, schema) {\n      if (!schema && name) {\n        schema = name;\n        name = undefined;\n      }\n      if (schema.hasOwnProperty('id') && typeof schema.id === 'string' && schema.id !== name) {\n        if (schema.id.charAt(0) === '/')\n          throw new Error('jjv: schema id\\'s starting with / are invalid.');\n        this.schema[normalizeID(schema.id)] = schema;\n      } else if (!name) {\n        throw new Error('jjv: schema needs either a name or id attribute.');\n      }\n      if (name)\n        this.schema[normalizeID(name)] = schema;\n    }\n  };\n\n  // Export for use in server and client.\n  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined')\n    module.exports = Environment;\n  else if (typeof define === 'function' && define.amd)\n    define(function () {return Environment;});\n  else\n    this.jjv = Environment;\n}).call(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/jjv/lib/jjv.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}